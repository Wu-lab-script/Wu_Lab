getwd()
setwd("/fs/scratch/PAS2177/51human_data/script")



library(Seurat)
library(SeuratObject)
library(dplyr)
library(patchwork)
library(uwot)
library(ggplot2)
library(ggpubr)
library(pheatmap)
library(data.table)
library(enrichR)
library(tidyverse)
library(limma)

dat.hc<- Read10X(data.dir = "/fs/ess/scratch/PAS2177/Tfh/HC")
dat.ra<- Read10X(data.dir = "/fs/ess/scratch/PAS2177/Tfh/RA")

objhc<- CreateSeuratObject(counts = dat.hc, project = "RA", min.cells = 3, min.features = 200)
objra<- CreateSeuratObject(counts = dat.ra, project = "RA", min.cells = 3, min.features = 200)

objhc$Condition="HC"
objra$Condition="RA"

objhc$Population="Tfh"
objra$Population="Tfh"

objhc[["percent.mt"]]<-PercentageFeatureSet(objhc, pattern = "mt-")
objhc<-subset(objhc, subset = nFeature_RNA>200 & nFeature_RNA<4000 & percent.mt<10)
objhc<-NormalizeData(objhc,normalization.method = "LogNormalize", scale.factor = 10000)
objhc<-FindVariableFeatures(objhc, selection.method = "vst", nfeatures = 2000)

objra[["percent.mt"]]<-PercentageFeatureSet(objra, pattern = "mt-")
objra<-subset(objra, subset = nFeature_RNA>200 & nFeature_RNA<4000 & percent.mt<10)
objra<-NormalizeData(objra, normalization.method = "LogNormalize", scale.factor = 10000)
objra<-FindVariableFeatures(objra, selection.method = "vst", nfeatures = 2000)

obj.list<- list(objhc, objra)
data.anchors<-FindIntegrationAnchors(obj.list, dims = 1:20)
M.dat<-IntegrateData(anchorset = data.anchors, dims = 1:20)

counts<-GetAssayData(M.dat, assay = "RNA", slot = "counts")
rownames(counts)<-gsub(pattern = "GRCh38-", replacement = "",x=rownames(counts))
rownames(counts)
# create a new seurat 
Tfhdat<- CreateSeuratObject(counts = counts, meta.data = M.dat@meta.data)
table(Tfhdat$Condition)

condition.list<-SplitObject(Tfhdat, split.by = "Condition")
condition.list<-lapply(X=condition.list, FUN = function(X){
  x<-NormalizeData(X)
  x<-FindVariableFeatures(X, selection.method="vst", nfeatures = 2000)})

# select features that are repeatedly variable across datasets for integration
features <- SelectIntegrationFeatures(object.list = condition.list)
immune.anchors <- FindIntegrationAnchors(object.list = condition.list, anchor.features = features)
# intergrate the data
Tfhdat <-IntegrateData(anchorset = immune.anchors)
# normalize the data
Tfhdat[["percent.mt"]]<-PercentageFeatureSet(Tfhdat, pattern = "^MT-")
Tfhdat<-subset(Tfhdat,subset = nFeature_RNA>200 & nFeature_RNA<4000 & percent.mt<10)
Tfhdat<-NormalizeData(Tfhdat, normalization.method = "LogNormalize", scale.factor = 10000 )
Tfhdat<- FindVariableFeatures(Tfhdat, selection.method = "vst", nfeatures = 2000)

all.genes<- rownames(Tfhdat)
Tfhdat<-ScaleData(Tfhdat, verbose = FALSE)
Tfhdat<-RunPCA(Tfhdat, ncps=20, verbose = FALSE)

ElbowPlot(Tfhdat)
head(Tfhdat)

Tfhdat<-RunUMAP(Tfhdat, reduction = "pca", dims = 1:20)
Tfhdat<-FindNeighbors(Tfhdat,reduction = "pca", dims = 1:20)
Tfhdat<- FindClusters(Tfhdat, resolution = 0.4)
markers<- FindAllMarkers(Tfhdat, only.pos = TRUE, logfc.threshold = 0.25)
write.csv(x=markers, file = "Tfh_positive.csv")

DimPlot(Tfhdat, reduction = "umap", group.by = "Condition",label = T, pt.size = 0.2)
DimPlot(Tfhdat, reduction = "umap", label = T, pt.size = 0.2)

DefaultAssay(Tfhdat) <- "RNA"

genenew.list<-c("ITGB7","RORC","ICOS","MAF","SH2D1A","SLAMF1","LY9","CD84","SLAMF6","IL2RA","IL2","IL21")

Idents(Tfhdat) <- "Condition"
Markers <- FindMarkers(Tfhdat, ident.1 = "HC", ident.2 = "RA",  test.use = "wilcox" )

write.csv(Markers,"/fs/scratch/PAS2177/51human_data/script/Markers of HC vs RA.csv")


DotPlot(Tfhdat, features = genenew.list,col.min =0.4,
        col.max = 1.0,dot.scale = 6,group.by = "Condition")+theme(axis.text.x = element_text(angle = 90,vjust = 0.5,hjust = 1))

